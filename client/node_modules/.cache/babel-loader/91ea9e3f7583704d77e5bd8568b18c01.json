{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\crawn-clothing\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport './shop.styles.scss';\nimport CollectionOverview from '../../components/collection-overview/collection-overview';\nimport CollectionPage from '../collection-page/collection';\nimport { firestore, convertCollectionssnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionssnapshotToMap(snapshot);\n    });\n    updateCollections(collectionsMap);\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nShopPage.propTypes = {\n  match: PropTypes.object,\n  updateCollections: PropTypes.object\n};\n\nconst mapDispatchToPtops = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToPtops)(ShopPage);","map":{"version":3,"sources":["C:/Users/admin/Desktop/crawn-clothing/src/pages/shop/shop.jsx"],"names":["React","Route","PropTypes","connect","updateCollections","CollectionOverview","CollectionPage","firestore","convertCollectionssnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","propTypes","object","mapDispatchToPtops","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAO,oBAAP;AAEA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACD,KAFD;AAGAb,IAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEf,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AApBoC;;AAuBvCG,QAAQ,CAACa,SAAT,GAAqB;AACnBF,EAAAA,KAAK,EAAElB,SAAS,CAACqB,MADE;AAEnBnB,EAAAA,iBAAiB,EAAEF,SAAS,CAACqB;AAFV,CAArB;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,iBAAiB,EAAEc,cAAc,IAAIO,QAAQ,CAACrB,iBAAiB,CAACc,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport './shop.styles.scss';\r\n\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview';\r\nimport CollectionPage from '../collection-page/collection';\r\nimport { firestore, convertCollectionssnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nclass ShopPage extends React.Component {\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection('collections');\r\n    collectionRef.onSnapshot(async snapshot => {\r\n      const collectionsMap = convertCollectionssnapshotToMap(snapshot);\r\n    });\r\n    updateCollections(collectionsMap);\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nShopPage.propTypes = {\r\n  match: PropTypes.object,\r\n  updateCollections: PropTypes.object\r\n};\r\n\r\nconst mapDispatchToPtops = dispatch => ({\r\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToPtops)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}