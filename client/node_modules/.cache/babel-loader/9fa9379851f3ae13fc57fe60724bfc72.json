{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\crawn-clothing\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport './shop.styles.scss';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPage from '../collection-page/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsAsync\n    } = this.props;\n    fetchCollectionsAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetching,\n      isLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: !isLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nShopPage.propTypes = {\n  match: PropTypes.object,\n  isFetching: PropTypes.bool,\n  isLoaded: PropTypes.bool,\n  fetchCollectionsAsync: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionsFetching,\n  isLoaded: selectIsCollectionLoaded\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/admin/Desktop/crawn-clothing/src/pages/shop/shop.jsx"],"names":["React","Route","PropTypes","connect","createStructuredSelector","fetchCollectionsAsync","selectIsCollectionsFetching","selectIsCollectionLoaded","CollectionOverviewContainer","CollectionPage","WithSpinner","CollectionOverviewWithSpinner","CollectionOverview","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isFetching","isLoaded","path","propTypes","object","bool","func","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SACEC,2BADF,EAEEC,wBAFF,QAGO,iCAHP;AAIA,OAAO,oBAAP;AAEA,OAAOC,2BAAP,MAAwC,oEAAxC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACE,kBAAD,CAAjD;AACA,MAAMC,yBAAyB,GAAGH,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBd,KAAK,CAACe,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAA4B,KAAKY,KAAvC;AACAZ,IAAAA,qBAAqB;AACtB;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,UAAT;AAAqBC,MAAAA;AAArB,QAAkC,KAAKJ,KAA7C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEL,KAAK,iBAAI,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAE,CAACI;AAA3C,SAAyDJ,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEL,KAAK,iBAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAqDJ,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AAtBoC;;AAyBvCH,QAAQ,CAACS,SAAT,GAAqB;AACnBJ,EAAAA,KAAK,EAAEjB,SAAS,CAACsB,MADE;AAEnBJ,EAAAA,UAAU,EAAElB,SAAS,CAACuB,IAFH;AAGnBJ,EAAAA,QAAQ,EAAEnB,SAAS,CAACuB,IAHD;AAInBpB,EAAAA,qBAAqB,EAAEH,SAAS,CAACwB;AAJd,CAArB;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,qBAAqB,EAAE,MAAMuB,QAAQ,CAACvB,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,MAAMwB,eAAe,GAAGzB,wBAAwB,CAAC;AAC/CgB,EAAAA,UAAU,EAAEd,2BADmC;AAE/Ce,EAAAA,QAAQ,EAAEd;AAFqC,CAAD,CAAhD;AAKA,eAAeJ,OAAO,CAAC0B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { fetchCollectionsAsync } from '../../redux/shop/shop.actions';\r\nimport {\r\n  selectIsCollectionsFetching,\r\n  selectIsCollectionLoaded\r\n} from '../../redux/shop/shop.selectors';\r\nimport './shop.styles.scss';\r\n\r\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\r\nimport CollectionPage from '../collection-page/collection';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchCollectionsAsync } = this.props;\r\n    fetchCollectionsAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isFetching, isLoaded } = this.props;\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={props => <CollectionOverviewWithSpinner isLoading={!isLoaded} {...props} />}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={props => <CollectionPageWithSpinner isLoading={!isLoaded} {...props} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nShopPage.propTypes = {\r\n  match: PropTypes.object,\r\n  isFetching: PropTypes.bool,\r\n  isLoaded: PropTypes.bool,\r\n  fetchCollectionsAsync: PropTypes.func\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isFetching: selectIsCollectionsFetching,\r\n  isLoaded: selectIsCollectionLoaded\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}