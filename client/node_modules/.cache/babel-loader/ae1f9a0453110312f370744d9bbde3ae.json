{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\crawn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  googleSignIn,\n  emailSignIn\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignIn(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    userCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"I already have an acount\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: this.state.email,\n    handleChange: this.handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    handleChange: this.handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignIn,\n    isGoggleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Sign in with Google\"))));\n};\n\nSignIn.propTypes = {\n  googleSignIn: PropTypes.func,\n  emailSignIn: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignIn: () => dispatch(googleSignInStart()),\n  emailSignIn: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/admin/Desktop/crawn-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","useState","connect","PropTypes","googleSignInStart","emailSignInStart","FormInput","CustomButton","SignIn","googleSignIn","emailSignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","state","propTypes","func","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport FormInput from '../form-input/form-input';\r\nimport CustomButton from '../custom-button/custom-button';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ googleSignIn, emailSignIn }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    emailSignIn(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    userCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2>I already have an acount</h2>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormInput\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={this.state.email}\r\n          handleChange={this.handleChange}\r\n          label=\"email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.password}\r\n          handleChange={this.handleChange}\r\n          label=\"password\"\r\n          required\r\n        />\r\n        <div className=\"buttons\">\r\n          <CustomButton type=\"submit\">Sign in</CustomButton>\r\n          <CustomButton type=\"button\" onClick={googleSignIn} isGoggleSignIn>\r\n            Sign in with Google\r\n          </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  googleSignIn: PropTypes.func,\r\n  emailSignIn: PropTypes.func\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignIn: () => dispatch(googleSignInStart()),\r\n  emailSignIn: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}